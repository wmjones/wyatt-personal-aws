{
  "permissions": {
    "allow": [
      "mcp__ide__getDiagnostics",
      "mcp__ide__executeCode",
      "mcp__taskmaster-ai__initialize_project",
      "mcp__taskmaster-ai__models",
      "mcp__taskmaster-ai__parse_prd",
      "mcp__taskmaster-ai__get_tasks",
      "mcp__taskmaster-ai__get_task",
      "mcp__taskmaster-ai__next_task",
      "mcp__taskmaster-ai__complexity_report",
      "mcp__taskmaster-ai__set_task_status",
      "mcp__taskmaster-ai__generate",
      "mcp__taskmaster-ai__add_task",
      "mcp__taskmaster-ai__add_subtask",
      "mcp__taskmaster-ai__update",
      "mcp__taskmaster-ai__update_task",
      "mcp__taskmaster-ai__update_subtask",
      "mcp__taskmaster-ai__remove_task",
      "mcp__taskmaster-ai__remove_subtask",
      "mcp__taskmaster-ai__clear_subtasks",
      "mcp__taskmaster-ai__move_task",
      "mcp__taskmaster-ai__analyze_project_complexity",
      "mcp__taskmaster-ai__expand_task",
      "mcp__taskmaster-ai__expand_all",
      "mcp__taskmaster-ai__add_dependency",
      "mcp__taskmaster-ai__remove_dependency",
      "mcp__taskmaster-ai__validate_dependencies",
      "mcp__taskmaster-ai__fix_dependencies",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__Neon__list_projects",
      "mcp__Neon__create_project",
      "mcp__Neon__delete_project",
      "mcp__Neon__describe_project",
      "mcp__Neon__run_sql",
      "mcp__Neon__run_sql_transaction",
      "mcp__Neon__describe_table_schema",
      "mcp__Neon__get_database_tables",
      "mcp__Neon__create_branch",
      "mcp__Neon__prepare_database_migration",
      "mcp__Neon__complete_database_migration",
      "mcp__Neon__describe_branch",
      "mcp__Neon__delete_branch",
      "mcp__Neon__get_connection_string",
      "mcp__Neon__provision_neon_auth",
      "mcp__Neon__explain_sql_statement",
      "mcp__Neon__prepare_query_tuning",
      "mcp__Neon__complete_query_tuning",
      "mcp__Neon__list_slow_queries",
      "mcp__Neon__list_branch_computes",
      "Bash(ls:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(cut:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(echo:*)",
      "Bash(pwd:*)",
      "Bash(cd:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(touch:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(type:*)",
      "Bash(date:*)",
      "Bash(whoami:*)",
      "Bash(id:*)",
      "Bash(uname:*)",
      "Bash(env:*)",
      "Bash(export:*)",
      "Bash(source:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(node:*)",
      "Bash(python:*)",
      "Bash(pip:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(aws:*)",
      "Bash(terraform:*)",
      "Bash(docker:*)",
      "Bash(pre-commit:*)",
      "Bash(pytest:*)",
      "Bash(jest:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(tsc:*)",
      "Bash(timeout:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(tree:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(ps:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(lsof:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(tar:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "WebFetch(domain:app.terraform.io)",
      "WebFetch(domain:neon.com)",
      "Bash(/home/vscode/.npm-global/lib/node_modules/@neondatabase/mcp-server-neon/dist/index.js 2 >& 1)",
      "Bash(NEON_API_KEY=napi_epgcx719uctp8rf2im5zkkablz31y1w7ovpl6oh7qfqmyh6ldmq3ch666yqn8j91 /usr/local/bin/npx -y @neondatabase/mcp-server-neon start napi_epgcx719uctp8rf2im5zkkablz31y1w7ovpl6oh7qfqmyh6ldmq3ch666yqn8j91 2 >& 1)",
      "Bash(git rm:*)",
      "Bash(npm install)",
      "mcp__taskmaster-ai__get_tasks",
      "Bash(git checkout:*)",
      "Bash(git reset:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git status:*)",
      "Bash(git branch:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "Bash(git stash:*)",
      "Bash(git stash pop:*)",
      "Bash(git stash apply:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(git show:*)",
      "Bash(git add:*)"
    ],
    "deny": [
      "Bash(git push*)",
      "Bash(*git push*)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "taskmaster-ai",
    "context7",
    "Neon"
  ]
}
