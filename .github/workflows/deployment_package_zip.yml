name: Deployment Package Zip

on:
    workflow_call:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: 3.12

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'
                  cache-dependency-path: src/lambda/athena/package-lock.json

            - name: Create target directory
              run: mkdir -p deploy/visualization

            - name: Include lambda files
              run: |
                # First copy the Python files from the root lambda directory
                find src/lambda -maxdepth 1 -name "*.py" -exec cp {} ./deploy/ \;

                # Then copy the visualization Python files
                find src/lambda/visualization -name "*.py" -exec cp {} ./deploy/visualization/ \;

            - name: Include system_prompts
              run: |
                # Handle system_prompts directory which may contain files
                if [ -d "src/system_prompts" ]; then
                  find src/system_prompts -type f -exec cp {} ./deploy/ \;
                fi

            - name: Install Python dependencies
              run: pip install -r requirements.txt -t ./deploy

            - name: Build Node.js Athena Lambda package
              run: |
                cd src/lambda/athena
                npm ci --only=production
                zip -r9 athena-lambda.zip . -x "*.git*" -x "*.zip" -x "node_modules/.cache/*" -x "package-lock.json"
                # Copy to main directory for Terraform
                cp athena-lambda.zip ../../../main/

            - name: Build Python Forecast Sync Lambda package
              run: |
                # Create forecast sync package directory
                mkdir -p deploy/forecast_sync

                # Copy forecast sync Python files
                cp src/lambda/forecast_sync/*.py deploy/forecast_sync/

                # Install forecast sync dependencies
                pip install -r src/lambda/forecast_sync/requirements.txt -t deploy/forecast_sync/

                # Create ZIP package
                cd deploy/forecast_sync
                zip -r9 forecast-sync-lambda.zip . -x "*.git*" -x "*.pyc" -x "__pycache__/*"

                # Copy to main directory for Terraform
                cp forecast-sync-lambda.zip ../../main/

            - name: Zip Python dependencies
              run: zip -r9 ./deployment_package.zip ./
              working-directory: ./deploy

            - name: Upload Python deployment package
              uses: actions/upload-artifact@v4
              with:
                  name: deployment-package
                  path: ./deploy/deployment_package.zip

            - name: Upload Athena Lambda package
              uses: actions/upload-artifact@v4
              with:
                  name: athena-lambda-package
                  path: ./main/athena-lambda.zip

            - name: Upload Forecast Sync Lambda package
              uses: actions/upload-artifact@v4
              with:
                  name: forecast-sync-lambda-package
                  path: ./main/forecast-sync-lambda.zip
