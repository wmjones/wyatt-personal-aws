name: Configure SSM Parameters for Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to configure (dev or prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

permissions:
  contents: read   # Required for actions/checkout

env:
  AWS_REGION: 'us-east-2'  # Update to match your AWS region

jobs:
  set-ssm-parameters:
    name: Set SSM Parameters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get S3 bucket name
        id: get-s3-info
        run: |
          # Get bucket name from Terraform outputs or direct lookup
          BUCKET_NAME=$(aws s3api list-buckets --query "Buckets[?contains(Name, 'wyatt-personal-aws-${{ github.event.inputs.environment }}-app')].Name | [0]" --output text)
          echo "Found bucket: $BUCKET_NAME"

          # Store bucket name in SSM Parameter Store
          aws ssm put-parameter \
            --name "/wyatt-personal-aws-${{ github.event.inputs.environment }}/frontend_bucket_name" \
            --value "$BUCKET_NAME" \
            --type "String" \
            --overwrite

          echo "S3 bucket parameter set successfully"

      - name: Get CloudFront distribution ID
        id: get-cloudfront-info
        run: |
          # Find CloudFront distribution that has our bucket as origin
          BUCKET_DOMAIN=$(aws s3api get-bucket-location --bucket "$BUCKET_NAME" --query "join('.', ['s3', LocationConstraint])" --output text)
          if [ "$BUCKET_DOMAIN" = "s3.null" ]; then
            BUCKET_DOMAIN="s3.us-east-1.amazonaws.com"
          fi

          BUCKET_ORIGIN="${BUCKET_NAME}.${BUCKET_DOMAIN}"
          echo "Looking for CloudFront distribution with origin containing: $BUCKET_ORIGIN"

          CF_ID=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[?Origins.Items[?contains(DomainName, '$BUCKET_NAME')]].Id | [0]" \
            --output text)

          if [ "$CF_ID" != "None" ] && [ -n "$CF_ID" ]; then
            echo "Found CloudFront distribution: $CF_ID"

            # Store CloudFront ID in SSM Parameter Store
            aws ssm put-parameter \
              --name "/wyatt-personal-aws-${{ github.event.inputs.environment }}/cloudfront_id" \
              --value "$CF_ID" \
              --type "String" \
              --overwrite

            echo "CloudFront ID parameter set successfully"
          else
            echo "No CloudFront distribution found for bucket $BUCKET_NAME"
          fi
