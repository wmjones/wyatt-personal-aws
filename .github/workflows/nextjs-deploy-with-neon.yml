name: Deploy Next.js to Vercel with Neon Branch

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'src/frontend/nextjs-app/**'
      - '.github/workflows/nextjs-deploy-with-neon.yml'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'src/frontend/nextjs-app/**'
      - '.github/workflows/nextjs-deploy-with-neon.yml'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  deploy-preview:
    runs-on: ubuntu-latest
    needs: setup
    if: github.event_name == 'pull_request'
    steps:
      # Step 1: Create Neon Branch FIRST
      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}
          username: neondb_owner

      # Step 2: Checkout code
      - uses: actions/checkout@v4

      # Step 3: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/frontend/nextjs-app/package-lock.json

      # Step 4: Install dependencies
      - name: Install dependencies
        working-directory: src/frontend/nextjs-app
        run: npm ci

      # Step 5: Run linter and type check
      - name: Run linter
        working-directory: src/frontend/nextjs-app
        run: npm run lint

      - name: Run type check
        working-directory: src/frontend/nextjs-app
        run: npx tsc --noEmit

      # Step 6: Install Vercel CLI
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Step 7: Pull Vercel Environment (this gets existing env vars)
      - name: Pull Vercel Environment Information
        working-directory: src/frontend/nextjs-app
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      # Step 8: Set Database Environment Variables for Build
      - name: Set Database Environment Variables for Build
        working-directory: src/frontend/nextjs-app
        run: |
          echo "DATABASE_URL=${{ steps.create_neon_branch.outputs.db_url_with_pooler }}" >> .env.production
          echo "DATABASE_URL_UNPOOLED=${{ steps.create_neon_branch.outputs.db_url }}" >> .env.production

      # Step 9: Build with Environment Variables
      - name: Build Project Artifacts
        working-directory: src/frontend/nextjs-app
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
          DATABASE_URL_UNPOOLED: ${{ steps.create_neon_branch.outputs.db_url }}

      # Step 10: Deploy to Vercel
      - name: Deploy Project Artifacts to Vercel
        working-directory: src/frontend/nextjs-app
        run: |
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "Preview URL: $(cat deployment-url.txt)"
        env:
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
          DATABASE_URL_UNPOOLED: ${{ steps.create_neon_branch.outputs.db_url }}

      # Step 11: Run Database Migrations on New Branch
      - name: Run Database Migrations
        working-directory: src/frontend/nextjs-app
        run: |
          # Install tsx for running TypeScript
          npm install --global tsx
          # Run database initialization
          npm run db:init
        env:
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
          DATABASE_URL_UNPOOLED: ${{ steps.create_neon_branch.outputs.db_url }}
          NEXT_PUBLIC_AWS_REGION: us-east-2
          NEXT_PUBLIC_USER_POOL_ID: us-east-2_FebjdKLG3
          NEXT_PUBLIC_USER_POOL_CLIENT_ID: 3i464fgdtarund735fjc0b5b6c
          AWS_API_GATEWAY_URL: https://v1zx8vrzzj.execute-api.us-east-2.amazonaws.com
          NODE_ENV: development

      # Step 12: Comment with Preview Info
      - name: Comment PR with Preview and Database Info
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const url = fs.readFileSync('src/frontend/nextjs-app/deployment-url.txt', 'utf8').trim();
            const body = `🚀 **Preview deployment ready!**

            **Preview URL**: ${url}

            🗄️ **Database Branch Created**: \`preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}\`

            The preview includes a dedicated database branch with all schema migrations applied.

            **Database URLs** (for local testing):
            \`\`\`
            DATABASE_URL="${{ steps.create_neon_branch.outputs.db_url_with_pooler }}"
            DATABASE_URL_UNPOOLED="${{ steps.create_neon_branch.outputs.db_url }}"
            \`\`\`

            ⚠️ **Security Note**: These URLs contain credentials. Do not commit them to the repository.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  # Clean up when PR is closed
  cleanup-preview:
    runs-on: ubuntu-latest
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Add cleanup comment
        uses: actions/github-script@v7
        with:
          script: |
            const body = `🗑️ **Preview Cleaned Up**

            The preview database branch \`preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}\` has been deleted.`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });

  deploy-dev:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/frontend/nextjs-app/package-lock.json

      - name: Install dependencies
        working-directory: src/frontend/nextjs-app
        run: npm ci

      - name: Run linter
        working-directory: src/frontend/nextjs-app
        run: npm run lint

      - name: Run type check
        working-directory: src/frontend/nextjs-app
        run: npx tsc --noEmit

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        working-directory: src/frontend/nextjs-app
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: src/frontend/nextjs-app
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        working-directory: src/frontend/nextjs-app
        run: |
          echo "Deploying to Vercel dev environment..."
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "Dev deployment URL: $(cat deployment-url.txt)"

  deploy-production:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/frontend/nextjs-app/package-lock.json

      - name: Install dependencies
        working-directory: src/frontend/nextjs-app
        run: npm ci

      - name: Run linter
        working-directory: src/frontend/nextjs-app
        run: npm run lint

      - name: Run type check
        working-directory: src/frontend/nextjs-app
        run: npx tsc --noEmit

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        working-directory: src/frontend/nextjs-app
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: src/frontend/nextjs-app
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        working-directory: src/frontend/nextjs-app
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
